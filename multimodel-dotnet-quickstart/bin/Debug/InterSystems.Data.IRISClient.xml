<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InterSystems.Data.IRISClient</name>
    </assembly>
    <members>
        <member name="T:InterSystems.BuildInfo">
            <summary>
            Version Information
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.ADO.IRIS">
            <summary>
            <para>
            <code>IRIS</code> provides various methods that can be used to access
            the IRIS Global Module. Basic operations such as GET, SET, KILL etc. are
            supported. There are also methods to execute class methods and routines.
            </para>
            <para>
            All methods will throw an exception on encountering any kind of error.
            </para>
            </summary>
            <remarks>
            Throughout the API, the subscript argument is defined as <code>params object []</code>.
            </remarks>
            <example>
            <code>
            // For single subscripts, values can be passed directly
            double? doubleTest = NativeAPI.GetDouble("myGlobal", "double");
            
            // or if the subscript is 1:
            double? doubleTest = NativeAPI.GetDouble("myGlobal", 1);
            
            // For multiple subscripts, use an <code>object []</code> like:
            NativeAPI.Set(value, "myGlobal", new object[] { 1, "double" });
            </code>
            </example>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.CreateIRIS(InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Returns an IRIS object. All API calls are made via this object.
            </summary>
            <example>
            <code>
                IRISConnection IRISConnect = new IRISConnection();
                IRISConnect.ConnectionString =
                 "Server=localhost; Port=51773; Namespace=USER;"
                 + "Password=SYS; User ID=_SYSTEM;";
                IRISConnect.Open();
                IRIS nativeAPI = IRIS.CreateIRIS(IRISConnect);
            </code>
            </example>
            <param name="conn">IRISConnection</param>
            <returns><code>IRIS</code> object</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Close">
            <summary>
            Close the <code>IRIS</code> object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetBool(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as a bool.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>bool</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetBytes(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as a byte [].
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>byte []</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetInt16(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as an Int16.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>Int16?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetInt32(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as an Int32.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>Int32?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetInt64(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as an Int64.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>Int64?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetObject(System.String,System.Object[])">
            <summary>
            Get the value of a global at a given subscript as an object. Returns null if not defined.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>object</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetString(System.String,System.Object[])">
            <summary>
            Gets the value of the global as a String. Returns <code>null</code> if
             node is undefined. This method does some translation between type-less
            IRIS and typed C#, regarding the empty string and null. A null
            character in IRIS $CHAR(0) is translated to the empty string in C# "".
            An empty string in IRIS "" is translated to null in C#. This
            translation is consistent with the way ADO.NET handles these values.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>string</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetSingle(System.String,System.Object[])">
            <summary>
            Gets the value of the global as a Single. Returns <code>null</code> if
            node is undefined. Returns 0.0 if node value is empty string.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>Single?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetDouble(System.String,System.Object[])">
            <summary>
            Gets the value of the global as a Double. Returns <code>null</code> if
            node is undefined. Returns 0.0 if node value is empty string.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>Double?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetDateTime(System.String,System.Object[])">
            <summary>
            Gets the value of the global as a DateTime. Returns <code>null</code> if
            node is undefined. Returns 0.0 if node value is empty string.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns><code>DateTime?</code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Boolean},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>bool?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Int32},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>Int32?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Int64},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>Int64?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Int16},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>Int16?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Double},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>Double?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.Single},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>Single?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Nullable{System.DateTime},System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>DateTime?</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.String,System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>string</code> value.
            This method does some translation between typed C# and type-less
            IRIS, regarding the empty string and null. An empty string in C# ""
            is translated to the null string character in IRIS $CHAR(0). A null 
            in C# is translated to the empty string in IRIS. This translation
            is consistent with the way ADO.NET handles these values.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Byte[],System.String,System.Object[])">
            <summary>
            Sets the current node's value to the given <code>byte[]</code> value.
            A null value translates to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.IO.MemoryStream,System.String,System.Object[])">
            <summary>
            Sets the current node's value to an instance of an object that implements
            System.IO.MemoryStream. A null value translates to "" in IRIS. Stored as 
            a byte [], to recover call GetBytes then initialize a System.IO.MemoryStream
            with the returned byte [].
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Set(System.Object,System.String,System.Object[])">
            <summary>
            Sets the current node's value to the specified value. Can be any of the
            following types<code>int?</code>, <code>bool?</code>,
            <code>short?</code>, <code>long?</code>, <code>double?</code>,
            <code>float?</code>, <code>string</code>, <code>DateTime?</code>,
            any object annotated with <code>[Serializable]</code>, <code>byte[]</code>. A null value translates 
            to "" in IRIS.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Kill(System.String,System.Object[])">
            <summary>
            Kills the global node including any descendants.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Increment(System.Int64,System.String,System.Object[])">
            <summary>
            Increments the specified global with the passed value.
            A null value is interpreted as 0.
            </summary>
            <param name="value"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.IsDefined(System.String,System.Object[])">
            <summary>
            Checks if a a global contains data ($DATA). 
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetNodes(System.String,System.Object[])">
            <summary>
            This method is for internal use only.
            Iterates over all subscripts in the $ORDER sense and produces a List of rows.
            Each row will be returned in a separate byte array.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetNextNode(System.Boolean,System.String,System.Object[])">
            <summary>
            Gets the subscript and value of the next global node in a $ORDER sense.
            Each node is wrapped in $list for transport, so the caller can then use the
            appropriate List decoding method to get the actual subscript and value.
             
             This method is intended for internal use only(IRISIterator) and so is marked package-protected.
            
            </summary>
            <param name="walkBackwards"></param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetIRISIterator(System.String,System.Object[])">
            <summary>
             Allows iterating over a global in the $ORDER sense by returning an iterator that can be 
             used to extract subscripts and global node values.
             
             The global reference (globalName + subscripts) passed to this method specifies the root
             global node.The IRISIterator returned will iterate over the immediate children
             of the root node. For example, for the following global:
                  ^gbl(1)="a"
                  ^gbl(1,11)="b"
                  ^gbl(1,12)="c"
                  ^gbl(2)="d"
             Calling GetIRISIterator("^gbl") will return an iterator that traverses the immediate
             children of ^gbl, that is, ^gbl(1) and ^gbl(2). Calling GetIRISIterator("^gbl",1) will
             return an iterator that traverses the immediate children of ^gbl(1), that is, ^gbl(1,11) and ^gbl(1,12).
            
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetIRISReverseIterator(System.String,System.Object[])">
            <summary>
            Just like GetIRISIterator, except the iteration happens in reverse order.
            </summary>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodBool(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method, passing 0 or more arguments and
             returning the method's return value as an instance of <code>bool?</code>.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
             <returns>the value returned by the IRIS ObjectScript class method, as an
            instance of<code> bool</code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodString(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method, passing 0 or more arguments and
             returning the method's return value as an instance of <code>string</code>.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
             <returns>the value returned by the IRIS ObjectScript class method, as an
            instance of <code>string</code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodLong(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method, passing 0 or more arguments and
             returning the method's return value as an instance of <code>long?</code>.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
             <returns>the value returned by the IRIS ObjectScript class method, as an
            instance of<code> long</code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodDouble(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method, passing 0 or more arguments and
             returning the method's return value as an instance of <code>double?</code>.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
             <returns>the value returned by the IRIS ObjectScript class method, as an
            instance of<code> double? </code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodBytes(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method, passing 0 or more arguments and
             returning the method's return value as an instance of <code>byte []</code>.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
             <returns>the value returned by the IRIS ObjectScript class method, as an
            instance of<code> byte []</code></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ClassMethodVoid(System.String,System.String,System.Object[])">
             <summary>
            
             Calls a IRIS ObjectScript class method with no return value, passing 0 or 
             more arguments.
             
             Arguments may be of any of the following types: <code>int?</code>,
             <code>short?</code>, <code>string</code>, <code>long?</code>,  
             <code>double?</code>,<code>float?</code>, <code>byte[]</code>, 
             <code>bool?</code> or<code> DateTime?</code>.
             Trailing arguments may be omitted, causing default
             values to be used for those arguments, either by passing fewer than the
             full number of arguments, or by passing<code>null</code> for trailing
             arguments.Throws an exception if a non-null argument is passed to the
             right of a null argument.
             </summary>
             <param name="className">className fully qualified name of the IRIS class to which the called method belongs</param>
             <param name="methodName">name of the IRIS class method</param>
             <param name="args"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.FunctionString(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="functionName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
            <returns>string</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.FunctionInt(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="functionName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
            <returns>long?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.FunctionDouble(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="functionName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
            <returns>double?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.FunctionBytes(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="functionName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.FunctionBool(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="functionName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
            <returns>bool?</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Procedure(System.String,System.String,System.Object[])">
            <summary>
            Calls a IRIS ObjectScript procedure, passing 0 or more arguments.
            Arguments may be of any of the following types: <code>int?</code>,
            <code>short?</code>, <code>string</code>, <code>long?</code>, 
            <code>double?</code>,<code>float?</code>, <code>byte[]</code>,
            <code>bool?</code> or <code>DateTime?</code>.
            
            Trailing arguments may be omitted, causing default
            values to be used for those arguments, either by passing fewer than the
            full number of arguments, or by passing <code>null</code> for trailing
            arguments.
            </summary>
            <param name="procedureName">name of the IRIS ObjectScript procedure to call.</param>
            <param name="routineName">name of the routine containing the procedure.</param>
            <param name="args">0 or more arguments to pass to the procedure.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Lock(System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Lock  the global, returns true on success.
            Note that this method performs an incremental lock and not
            the implicit unlock before lock feature that is also offered in COS.
            
            </summary>
            <param name="lockMode">combination of the following chars, S for shared lock, E for escalating lock, default is empty string (exclusive and non-escalating)</param>
            <param name="timeout">amount to wait to acquire the lock in seconds</param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
            <returns>true on success</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.Unlock(System.String,System.String,System.Object[])">
            <summary>
            Unlock the global.
            Note that this method performs an incremental unlock and not the implicit unlock before lock feature that is also offered in COS.
            </summary>
            <param name="lockMode">lockMode combination of the following chars, S for shared lock, E for escalating lock, default is empty string (exclusive and non-escalating)</param>
            <param name="globalName"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.ReleaseAllLocks">
            <summary>
            Release all locks associated with the session.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.TStart">
             <summary>
             Start/open a IRIS transaction.
            
             DO NOT mix the IRIS(Native) transaction model with the SQL transaction model.
             If you want to use only Native commands within a transaction, you should always use Native transaction methods.
             If you want to use a mix of Native and ADO.NET/SQL commands within a transaction, you should turn autoCommit OFF
             and then always use Native transaction methods.
             If you want to use only ADO.NET/SQL commands within a transaction, you can either always use SQL transaction
             methods, or turn autocommit OFF and then always use Native transaction methods.
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.TCommit">
             <summary>
            
             DO NOT mix the IRIS(Native) transaction model with the SQL transaction model.
             If you want to use only Native commands within a transaction, you should always use Native transaction methods.
             If you want to use a mix of Native and ADO.NET/SQL commands within a transaction, you should turn autoCommit OFF
             and then always use Native transaction methods.
             If you want to use only ADO.NET/SQL commands within a transaction, you can either always use SQL transaction
             methods, or turn autocommit OFF and then always use Native transaction methods.
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.TRollback">
            <summary>
            Roll back all open IRIS transactions in the session.
             
             DO NOT mix the IRIS(Native) transaction model with the SQL transaction model.
             If you want to use only Native commands within a transaction, you should always use Native transaction methods.
             If you want to use a mix of Native and ADO.NET/SQL commands within a transaction, you should turn autoCommit OFF
             and then always use Native transaction methods.
             If you want to use only ADO.NET/SQL commands within a transaction, you can either always use SQL transaction
             methods, or turn autocommit OFF and then always use Native transaction methods.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.TRollbackOne">
            <summary>
            Roll back the current level IRIS transaction only.
            If this is a nested transaction, any higher-level transactions will not be rolled back.
            
             DO NOT mix the IRIS (Native) transaction model with the SQL transaction model.
             If you want to use only Native commands within a transaction, you should always use Native transaction methods.
             If you want to use a mix of Native and ADO.NET/SQL commands within a transaction, you should turn autoCommit OFF
             and then always use Native transaction methods.
             If you want to use only ADO.NET/SQL commands within a transaction, you can either always use SQL transaction
             methods, or turn autocommit OFF and then always use Native transaction methods.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRIS.GetTLevel">
             <summary>
             Get the level of the current nested IRIS transaction.
             Returns 1 if there is only a single transaction open.Returns 0 if there are no transactions open.
             This is equivalent to fetching the value of the $TLEVEL special variable.
            
             DO NOT mix the IRIS(Native) transaction model with the SQL transaction model.
            
             If you want to use only Native commands within a transaction, you should always use Native transaction methods.
             If you want to use a mix of Native and ADO.NET/SQL commands within a transaction, you should turn autoCommit OFF
             and then always use Native transaction methods.
             If you want to use only ADO.NET/SQL commands within a transaction, you can either always use SQL transaction
             methods, or turn autocommit OFF and then always use Native transaction methods.
             </summary>
             <returns>transaction level as int?</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISADOConnection">
            <remarks>
            Represents an open connection to a IRIS database.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISADOConnection.TRANSACTION_READ_VERIFIED">
            <summary>
            IRIS Specific IsolationLevel
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IRISADOConnection class with the specified connection string.
            </summary>
            <param name="connectionString">The connection used to open the IRIS Server database.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IRISADOConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IRISADOConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="logfile">Log file name.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.GetConnectionString(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs the .NET connection string.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="nsp">The namespace.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="logfile">The log file name.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.BeginTransaction">
            <summary>
            Starts a transaction on the IRIS Server side. The default isolation level is <cref name="IsolationLevel.ReadCommitted"/>.
            </summary>
            <returns>
            An object representing the new <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Starts a transaction on the IRIS Server side with the specified <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.IsolationLevel"/> value.
            </summary>
            <param name="isolevel">The transaction isolation level for this connection.</param>
            <returns>
            An object representing the new <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.BeginDbTransaction(System.Data.IsolationLevel)">
            <summary>
            Starts a transaction at the data source with the specified <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.IsolationLevel"/> value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.GetSchema">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.GetSchema(System.String)">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> using the specified name for the schema name.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.GetSchema(System.String,System.String[])">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> using the specified string for the schema name and the specified string array for the restriction values.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
            <returns> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.GetNamespaceList">
            <summary>
            
            </summary>
            <remarks>
            To use this utility the <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.ConnectionString"/> property must be set for this
            <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> object.
            </remarks>
            <returns><see cref="T:System.String"/>[] containing an entry for each available namespace</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ping">
            <summary>
            Pings the database to ensure that it is up and responding
            </summary>
            <returns>True if the database is responsive</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ping(System.Int32)">
            <summary>
            Sends a number of pings to the connected IRIS Server and returns the time taken.
            </summary>
            <param name="times">Number of pings to send</param>
            <returns>Time taken</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.sendStreamPrefetchSizeMessage">
            <summary>
            Sets the stream prefetch size. Calling this with a postive StreamPrefetchSize will activate
            stream prefetch logic, which is off by default. All streams smaller than or equal to the prefetch size 
            will be fetched in entirety as part of the original result set, thus 
            eliminating the need for additional server round trips. Any streams larger 
            than pre-fetch size will not be prefetched.
            This is controlled automatically using the StreamPrefetch key/value in the ConnectionString
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ping(System.Int32,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            This is a higher resolution version of Ping for testing purposes
            </summary>
            <param name="times"></param>
            <param name="first"></param>
            <param name="second"></param>
            <param name="third"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ChangeDatabase(System.String)">
            <summary>
            Placeholder for future functionality.  Changes the current Namespace associated with an open <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <param name="value">The Namespace/Database name.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ClearAllPools">
            <summary>
            Removes all connections in the connection pools and clears the Pools.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ClearPool(InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Clears the connection pool identified by matching the specified instance of a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <param name="conn">The matching <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> used to identify the connection pool to be cleared.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.ClearPool">
            <summary>
            Clears the connection pool identified by the current instance of a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.Close">
            <summary>
            Closes the connection to IRIS Server. Handles Pooled and non-Pooled connections.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.CreateCommand">
            <summary>
            Creates and returns a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> instance associated with the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> object</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.CreateDbCommand">
            <summary>
            Return a <see cref="T:System.Data.Common.DbCommand"/> object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.Dispose(System.Boolean)">
            <summary>
            Dispose connection
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.Login">
            <summary>
            Send Login messages to IRIS.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.Open">
            <summary>
            Open connection to the IRIS Server database.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepCallError(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepCallReturn(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepCall(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepWriteHeaderAndSend(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepCallReturnListByteArrays(System.Byte[],System.Int32)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.xepReadHeader(System.Boolean)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISADOConnection.getHostAddress">
            <summary>
            Returns the TCP/IP address of the client application
            </summary>
            <returns></returns>
            
        </member>
        <member name="E:InterSystems.Data.IRISClient.IRISADOConnection.InfoMessage">
            <summary>
            Placeholder.  Occurs when the IRIS Server returns a warning or informational message.
            </summary>
        </member>
        <member name="E:InterSystems.Data.IRISClient.IRISADOConnection.StateChange">
            <summary>
            Event to notify a change in the state of the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.DbProviderFactory">
            <summary>
            Return an instance of IRISFactory <see cref="T:InterSystems.Data.IRISClient.IRISFactory"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ProviderFactory">
            <summary>
            Return an instance of IRISFactory <see cref="T:InterSystems.Data.IRISClient.IRISFactory"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IsTransactionActive">
            <summary>
            Returns whether a transaction in progress on the server on the SQL side or the Object binding side.
            </summary>
            <returns>Returns true if connection is actively in a transaction on the server.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.TransactionLevel">
            <summary>
            Returns the Transaction Level on the server
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IsolationLevel">
            <summary>
            Allows setting the IsolationLevel of the Connection, or returns the IRIS database current
            IsolationLevel.  This will make a call to the IRIS server, so should only be used sparingly.
            </summary>
            <value>The <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.IsolationLevel"/>.</value>
            <returns>The <see cref="T:System.Data.IsolationLevel"></see> for this connection. The default is ReadCommitted.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.StreamPrefetchSize">
            <summary>
            Returns an int representing the current stream prefetch size.If
            this value equals 0, the stream prefetch is off. Any positive value represents
            the current stream prefetch chunk size. This must be set before calling IRISADOConnection.Open().
            </summary>
            <returns>size</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.AllowUnboundParameters">
            <summary>
            Setting AllowUnboundParameters to true allows a statement containing 
            '?' parameters to be undefined and not added to IRISParameterCollection for 
            the IRISCommand object.  The '?' in the statement or stored procedure will be
            sent to the IRIS Server as a default parameter.  This is mainly used for Generated 
            Proxy IRIS Classes that implement stored procedures.
            </summary>
            <value>true to prevent the throwing of an exception, false is the default behavior.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IgnoreNull">
            <summary>
            Gets or sets a value indicating whether empty string corresponds to null on the server.
            </summary>
            <value><c>true</c> if empty string corresponds to null on the server; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.PreparseCacheCount">
            <summary>
            Return the number of entries in the PreparseCache for this Pooled connection.
            </summary>
            <value>The preparse cache count.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ServerUnicode">
            <summary>
            Return true if connected to a Unicode IRIS Server, false otherwise.
            </summary>
            <value><c>true</c> if [server unicode]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ServerEncoding">
            <summary>
            Return the Encoding of IRIS Server. For use with the Object binding.
            </summary>
            <value>The server encoding.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ServerLocaleString">
            <summary>
            Return the string returned by IRIS to interpret single byte character data.
            </summary>
            <value>The server locale string.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IRISJobID">
            <summary>
            Return the connected IRIS Server's process ID
            </summary>
            <value>The IRIS job ID.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IRISJobNumber">
            <summary>
            Return the connected IRIS Server's process Number
            </summary>
            <value>The IRIS job Number.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.SQLDialect">
            <summary>
            The Dialect used for SQL statements sent to the IRIS Server
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.MetaDataFormat">
            <summary>
            The Format for GetSchema metadata 
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.Options">
            <summary>
            The Dialect used for SQL statements sent to the IRIS Server
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ProtocolVersion">
            <summary>
            Return the current Protocol number supported by this IRIS Server connection.
            </summary>
            <value>The protocol version.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ConnectionString">
             <summary>
             Return/Set the connection string used to open a IRIS Server database.  The connection string is made up of key/value pairs.
             </summary>
             <value>A <see cref="T:System.String"/> value.</value>
             <returns>A string containing connection settings.</returns>
             <example>Setting the ConnectionString
             <code>
             ConnectionString="Server = localhost; Log File=c:\\cprovider.log;Port=1972; Namespace=Samples; Password = SYS; User ID = _system;"
             </code></example>
             <remarks>
             <list type="table">
             <listheader>
             <term>Keys</term>
             <description>Description of key/value</description>
             </listheader>
             <item>
             <term>APPLICATION NAME</term>
             <description>set the application name</description>
             </item>
             <item>
             <term>CONNECT TIMEOUT or CONNECTION TIMEOUT</term>
             <description>set the length of time in seconds to try and establish a connection before failure</description>
             </item>
             <item>
             <term>CONNECTION LIFETIME</term>
             <description>the length of time in seconds to wait before resetting an idle Pooled connection</description>
             </item>
             <item>
             <term>CONNECTION RESET</term>
             <description>turn on Pooled connection reset mechanism (used with Connection Lifetime). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>DATA SOURCE, SERVER, ADDRESS, ADDR, NETWORK ADDRESS</term>
             <description>IP address or host name</description>
             </item>
             <item>
             <term>INITIAL CATALOG, DATABASE ,NAMESPACE</term>
             <description>set Namespace to connect to</description>
             </item>
             <item>
             <term>APPENDLOGFILE, APPEND LOG FILE</term>
             <description>set log file location and turn on appended logging</description>
             </item>
             <item>
             <term>LOGFILE, LOG FILE</term>
             <description>set log file location and turn on logging</description>
             </item>
             <item>
             <term>MAX POOL SIZE</term>
             <description>maximum size of connection pool, for this specific connection string</description>
             </item>
             <item>
             <term>MIN POOL SIZE</term>
             <description>minimum or initial size of the connection pool, for this specific connection string</description>
             </item>
             <item>
             <term>PACKET SIZE</term>
             <description>set TCP Packet size</description>
             </item>
             <item>
             <term>PASSWORD ,PWD</term>
             <description>set password</description>
             </item>
             <item>
             <term>POOLING</term>
             <description>turn on connection pooling (default). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>PORT</term>
             <description>set TCP/IP port number to connect with</description>
             </item>
             <item>
             <term>PREPARSE CACHE SIZE</term>
             <description>upper limit of the number of preparsed cached commands before recycling is applied</description>
             </item>
             <item>
             <term>SSL</term>
             <description>set SSL authentication on </description>
             </item>
             <item>
             <term>SSLPROTOCOL</term>
             <description>set SSL Protocol to use (eg. TLS1) </description>
             </item>
             <item>
             <term>SERVERHOSTNAMEVALIDATION</term>
             <description>set SSL to validate server's hostname in remote certificate </description>
             </item>
             <item>
             <term>SO_RCVBUF, SO RCVBUF</term>
             <description>set TCP receive buffer size</description>
             </item>
             <item>
             <term>SO_SNDBUF, SO SNDBUF</term>
             <description>set TCP send buffer size</description>
             </item>
             <item>
             <term>TCP_NODELAY, TCP NODELAY</term>
             <description>set TCP nodelay option (default is on). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>TRANSACTIONISOLATIONLEVEL, TRANSACTION ISOLATION LEVEL</term>
             <description>set System.Data.IsolationLevel value for the connection</description>
             </item>
             <item>
             <term>UID, USER, USER ID</term>
             <description>set user login name</description>
             </item>
             <item>
             <term>WORKSTATION ID</term>
             <description>set Workstation name for process identification</description>
             </item>
             </list>
              
            
            </remarks>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ConnectionTimeout">
            <summary>
            Return/Set the time to wait to establish a connection, before terminating and generating an error.
            </summary>
            <value>The time to wait to establish a connection in seconds (Max value 2147483). Zero for ConnectionTimeout waits indefinitely for a connection to be made. Negative values are not allowed.</value>
            <returns>The time (in seconds) to wait for a connection to open. The default value is 30 seconds.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.Database">
            <summary>
            Return the Namespace connected to on the IRIS Server.
            </summary>
            <value>The Namespace.</value>
            <returns>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.DataSource">
            <summary>
            Return the host name or IP address for the connected IRIS Server database.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.Driver">
            <summary>
            Return the version of the IRISProvider.
            </summary>
            <value>The driver.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.AppendLogFile">
            <summary>
            Flag to cause appending to existing log file
            </summary>
            <value>takes/returns a bool value set to true if appending to log file is enabled </value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.LoggingType">
            <summary>
            Enum to enable different types of logging for example raw TCP/IP
            </summary>
            <value>takes/returns a int value set to 0 for normal logging, 1 for raw TCP/IP logging, and 2 for both </value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IsLogging">
            <summary>
            Return true if logging is enabled and <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.LogEnable"/> is true.
            </summary>
            <value>
            	<c>true</c> if this instance is logging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.LogFile">
            <summary>
            Return/Sets the log file name and opens the log.  Setting to null closes the log file, even if other connections have the same log file open.
            </summary>
            <value>The full log file path.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.LogEnable">
            <summary>
            Enables (true)/Disables (false) writing to an open log defined in the <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.ConnectionString"/>.  Can be used by application developers to turn on logging around specific events.
            </summary>
            <value><c>true</c> if log is writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.FeatureOption">
            <summary>
            Sets the supported Options for advanced SQL features <see cref="T:InterSystems.Data.IRISClient.Feature"/>.  Used to turn on fastSelect or fastUpdates that makes SQL operations faster when possible.
            Can be combined as a flag so that multiple options can be selected.  Should be set before calling Open() on the connection.
            </summary>
            <value>SupportedOptions flags</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IRISMajorVersion">
            <summary>
            IRIS major version
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.IRISMinorVersion">
            <summary>
            IRIS minor version
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.PacketSize">
            <summary>
            Return the current Socket packet Size for this connection.
            </summary>
            <value>The size of the packet.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.Port">
            <summary>
            Return the port number
            </summary>
            <value>The TCP/IP Port number.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.User">
            <summary>
            Return the user name
            </summary>
            <value>The user name used for connection security.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.ServerVersion">
            <summary>
            Return the IRIS Server version.
            </summary>
            <value>The server version.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.State">
            <summary>
            Return the state of the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <value>The state of the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.</value>
            <returns>One of the <see cref="T:System.Data.ConnectionState"></see> values.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.StatementMaxCacheSize">
            <summary>
            Max size of the cache of statements for reuse
            </summary>
            <value>takes/returns a int value, must be 5 or larger </value>
            <remarks>Default size is 500</remarks>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISADOConnection.WorkstationId">
            <summary>
            Return a <see cref="T:System.String"/> that identifies the client connection over on the IRIS Server. This can be set in the <see cref="P:InterSystems.Data.IRISClient.IRISADOConnection.ConnectionString"/> using the WorkstationId Key.
            </summary>
            <value>The workstation id.</value>
        </member>
        <member name="T:InterSystems.Data.IRISClient.Feature">
            <summary>
            Advanced Features on the Connection
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.Feature.NoOption">
            <summary>
            No advanced Features
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.Feature.OptfastSelect">
            <summary>
            Fast Select queries when possible
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.Feature.OptfastInsert">
            <summary>
            Fast Insert of rows when possible
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.Feature.OptSharding">
            <summary>
            Enable sharding feature
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.Feature.OptParallel">
            <summary>
            Enable Parallel feature
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISCommand">
            <remarks>
            Represents a SQL statement or stored procedure to execute against a IRIS Server database. This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> class with the SQL statement text.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.#ctor(System.String,InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> class with the SQL statement text and a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
            <param name="connection">A <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> that represents the connection to a IRIS Server.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.#ctor(System.String,InterSystems.Data.IRISClient.IRISADOConnection,InterSystems.Data.IRISClient.IRISTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> class with the SQL statement text, a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>, and the <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/>.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
            <param name="connection">A <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> that represents the connection to the IRIS Server.</param>
            <param name="transaction">The <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/> in which the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> executes.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.Cancel">
            <summary>
            Placeholder for future enhancement. Cancels the execution of a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.CreateParameter">
            <summary>
            Creates a new instance of a <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.CreateDbParameter">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.Dispose(System.Boolean)">
            <summary>
            Dispose the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteNonQuery">
            <summary>
            Executes a SQL statement against the IRIS database connection and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <summary>
            Sends the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandText"/> to the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.DbConnection"/> and returns a <see cref="T:System.Data.Common.DbDataReader"/> object using one of the <see cref="T:System.Data.CommandBehavior"/> values.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteReader">
            <summary>
            Sends the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandText"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> and returns a <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> object.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Sends the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandText"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> and returns a <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> object using one of the <see cref="T:System.Data.CommandBehavior"/> values.
            </summary>
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"/> values.</param>
            <returns>A <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteScalar">
            <summary>
            Executes the SQL statement, and returns the first column of the first row in the result set. Additional columns and rows are ignored.
            </summary>
            <returns>
            A single <see cref="T:System.Object"/> representing the returned data or a null reference if no data.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ExecuteXmlReader">
            <summary>
            Future PlaceHolder. Not Implemented
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.privatePrepare">
            <summary>
            Creates a prepared statement of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> on the IRIS Server.  Validates the syntax for the SQL statement against the Cache Server.
            No log is generated.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.Prepare">
            <summary>
            Creates a prepared statement of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> on the IRIS Server.  Validates the syntax for the SQL statement against the Cache Server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.ResetCommandTimeout">
            <summary>
            Resets the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandTimeout"/> property to its default value.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISCommand.GetCurrentServerCursorNumber">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.Poolable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> is poolable.
            </summary>
            <value><c>true</c> if poolable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.CommandText">
            <summary>
            Return/Set the SQL statement or stored procedure to execute at the IRIS Server database.
            </summary>
            <value>The SQL statement or stored procedure to execute.</value>
            <returns>The text command to execute. The default value is an empty string ("").</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.CommandTimeout">
            <summary>
            Return/Set the maximum wait time before terminating an executed query and generating an error.  This currently only applies to query statements.
            </summary>
            <value>
            The maximum wait time in seconds. 
            </value>
            <returns>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</returns>
            <exception cref="T:System.ArgumentException">The property value assigned is less than 0. </exception>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.CommandType">
            <summary>
            Return/set a value indicating how the <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandText"/> property is interpreted.
            </summary>
            <value>The <see cref="P:InterSystems.Data.IRISClient.IRISCommand.CommandText"/> type.</value>
            <returns>One of the <see cref="T:System.Data.CommandType"></see> values. The default is Text.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.Connection">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> used by this instance of the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.
            </summary>
            <value>The IRIS Connection.</value>
            <returns>The connection to the IRIS Server.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.DesignTimeVisible">
            <summary>
            Return/Set a value indicating if the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> object should be visible in a Windows Form Designer control.
            </summary>
            <value><c>true</c> if [design time visible]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.DbConnection">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.DbParameterCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.DbTransaction">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.Parameters">
            <summary>
            Return the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <value>The <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.</value>
            <returns>The parameters of the SQL statement or stored procedure.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.Transaction">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/> within which the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> executes.
            </summary>
            <value>The <see cref="T:InterSystems.Data.IRISClient.IRISTransaction"/></value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISCommand.UpdatedRowSource">
            <summary>
            Return/Set how <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> results are applied to the <see cref="T:System.Data.DataRow"/> when used by the Update method of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/>.
            </summary>
            <value>How <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> results are applied.</value>
        </member>
        <member name="T:InterSystems.Data.IRISClient.Descriptor">
            <remarks>
            Inherited Class of Column Descriptor information 
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISConnection">
            <remarks>
            Shorthand name for IRISConnection, forwards all methods to IRISADOConnection
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISConnection"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IRISConnection class with the specified connection string.
            </summary>
            <param name="connectionString">The connection used to open the IRIS Server database.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IRISConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IRISConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="logfile">Log file name.</param>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder">
            <summary>
            Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/> class. The provided connection string provides the data for the instance's internal connection information.
            </summary>
            <param name="connectionString">The basis for the object's internal connection information. Parsed into key/value pairs.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/> contains a specific key.
            </summary>
            <param name="keyword">The key to locate.</param>
            <returns>true if the <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/> contains an element that has the specified key; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Remove(System.String)">
            <summary>
            Removes the entry with the specified key from the <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/> instance.
            </summary>
            <param name="keyword">The value of the key/value pair to be removed from the connection string.</param>
            <returns>true if the key existed within the connection string and was reset; false if the key did not exist.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
            <summary>
            Retrieves a value corresponding to the supplied key from this <see cref="T:InterSystems.Data.IRISClient.IRISConnectionStringBuilder"/>.
            </summary>
            <param name="keyword">The key of the item to retrieve.</param>
            <param name="value">The value corresponding to keyword.</param>
            <returns>true if keyword was found within the connection string; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Clear">
            <summary>
            Clear the contents of valid keywords
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="keyword">The key of the item to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.ApplicationName">
            <summary>
            Gets or sets the name of the ApplicationName associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.ConnectionLifetime">
            <summary>
            Gets or sets the ConnectionLifetime associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.ConnectionTimeout">
            <summary>
            Gets or sets the ConnectionTimeout associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.ConnectionReset">
            <summary>
            Gets or sets the ConnectionReset associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Server">
            <summary>
            Gets or sets the name of the Server associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Namespace">
            <summary>
            Gets or sets the name of the Namespace associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.IsolationLevel">
            <summary>
            Gets or sets the <see cref="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.IsolationLevel"/> associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.LogFile">
            <summary>
            Gets or sets the name and path of the LogFile associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.MinPoolSize">
            <summary>
            Gets or sets the MinPoolSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.MaxPoolSize">
            <summary>
            Gets or sets the MaxPoolSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Pooling">
            <summary>
            Gets or sets boolean to enable Pooling associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.PacketSize">
            <summary>
            Gets or sets PacketSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Password">
            <summary>
            Gets or sets Password associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Port">
            <summary>
            Gets or sets TCP/IP Port used for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.PreparseCacheSize">
            <summary>
            Gets or sets PreparseCacheSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.SQLDialect">
            <summary>
            Gets or sets the SQL Dialect associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.MetaDataFormat">
            <summary>
            Gets or sets the MetaData format returned by GetSchema.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.Ssl">
            <summary>
            Gets or sets the Ssl value to true and enables SSL processing associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.SslProtocol">
            <summary>
            Gets or sets the SslProtocol.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.SslServerHostNameVerification">
            <summary>
            Gets or sets the SslServerHostNameVerification value to true and enables SSL validation of the server name on the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.SoSndBuf">
            <summary>
            Gets or sets the SoSndBuf (TCP/IP send buffer) associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.SoRcvBuf">
            <summary>
            Gets or sets the SoRcvBuf (TCP/IP recv buffer) associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.StreamPrefetch">
            <summary>
            Gets or sets StreamPrefetch for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.TcpNoDelay">
            <summary>
            Gets or sets TcpNoDelay for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.User">
            <summary>
            Gets or sets the User name associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISConnectionStringBuilder.WorkstationId">
            <summary>
            Gets or sets the WorkstationId associated with the connection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISDataAdapter">
            <remarks>
            Represents a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> set and a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> that are used to fill the <see cref="T:System.Data.DataSet"/> and update IRIS Server database. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.#ctor(InterSystems.Data.IRISClient.IRISCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/> class with the specified SQL SELECT statement.
            </summary>
            <param name="selectCommand">An <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:InterSystems.Data.IRISClient.IRISDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/>.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.#ctor(System.String,InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Return a <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/> instance using the SQL SELECT statement and the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> instance.
            </summary>
            <param name="selectCommandText">A <see cref="T:System.String"/> that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:InterSystems.Data.IRISClient.IRISDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/>.</param>
            <param name="selectConnection">An <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> instance for the IRIS database connection.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.#ctor(System.String,System.String)">
            <summary>
            Return a <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/> instance using the supplied SQL SELECT statement and connection string.
            </summary>
            <param name="selectCommandText">A <see cref="T:System.String"/> that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:InterSystems.Data.IRISClient.IRISDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/>.</param>
            <param name="selectConnectionString">The connection string to establish the IRIS database connection.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.Dispose(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="E:InterSystems.Data.IRISClient.IRISDataAdapter.RowUpdating">
            <summary>
            Occurs during update before a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> is executed against the IRIS Server database.
            </summary>
        </member>
        <member name="E:InterSystems.Data.IRISClient.IRISDataAdapter.RowUpdated">
            <summary>
            Occurs during update after a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> is executed against the IRIS Server database.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataAdapter.DeleteCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to delete records in the IRIS Server database.
            </summary>
            <value>An SQL statement or stored procedure for deletes.</value>
            <returns>An <see cref="T:IRISCommand"></see> used during <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see> to delete records in the data source for deleted rows in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataAdapter.InsertCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to insert new records into the IRIS Server database.
            </summary>
            <value>An SQL statement or stored procedure for inserts.</value>
            <returns>A <see cref="T:IRISCommand"></see> used during <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see> to insert records in the data source for new rows in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataAdapter.SelectCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to select records in the IRIS Server database.
            </summary>
            <value>An SQL statement or stored procedure for selects.</value>
            <returns>A <see cref="T:IRISCommand"></see> that is used during <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see> to select records from data source for placement in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataAdapter.UpdateCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to update records in the IRIS Server database.
            </summary>
            <value>An SQL statement or stored procedure for updates.</value>
            <returns>A <see cref="T:IRISCommand"></see> used during <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see> to update records in the data source for modified rows in the data set.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISDataReader">
            <remarks>
            Provides a way of reading rows from a IRIS Server database using a forward only cursor. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.Close">
            <summary>
            Closes the <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.Dispose(System.Boolean)">
            <summary>
            Dispose IRISDataReader
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetBoolean(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="i">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetByte(System.Int32)">
            <summary>
            Return the value of the specified column as a byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a <see cref="T:System.Byte"/> array from the specified column, offset and length, into a supplied buffer <see cref="T:System.Byte"/> array at the given offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index offset within the field from which to begin the copy operation.</param>
            <param name="buffer">The destination supplied buffer.</param>
            <param name="bufferIndex">The index offset for the destination buffer where writing data starts. </param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetChar(System.Int32)">
            <summary>
            Return the value of the specified column as a single character (<see cref="T:System.Char"/>).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Copies a <see cref="T:System.Char"/> array from the specified column, offset and length, into a supplied buffer <see cref="T:System.Char"/> array at the given offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index offset within the field from which to begin the copy operation.</param>
            <param name="buffer">The destination supplied buffer.</param>
            <param name="bufferIndex">The index offset for the destination buffer where writing data starts. </param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of characters copied.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetData(System.Int32)">
            <summary>
            Placeholder.  Not supported
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDbDataReader(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataReader"/> object for the requested column ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>A <see cref="T:System.Data.Common.DbDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Return the name of the IRIS Server data type.
            </summary>
            <param name="i">The zero-based column ordinal. </param>
            <returns>The name of the IRIS Server data type.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDate(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetTime(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDateTime(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDecimal(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Decimal"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetDouble(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Double"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetFieldType(System.Int32)">
            <summary>
            Return the DotNet <see cref="T:System.Type"/> that is the data type of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The <see cref="T:System.Type"/> that is the Dot Net data type of the object.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetFloat(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Single"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetGuid(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Guid"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetInt16(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int16"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetInt32(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int32"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetInt64(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int64"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetName(System.Int32)">
            <summary>
            Return the name of the specified column as a <see cref="T:System.String"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetOrdinal(System.String)">
            <summary>
            Return the column ordinal, given the name of the column.
            </summary>
            <param name="columnName">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.HasColumnName(System.String)">
            <summary>
            Return true if the name of the column exists.
            </summary>
            <param name="columnName">The name of the column.</param>
            <returns>true if column name exists, else false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetSchemaTable">
            <summary>
            Return a <see cref="T:System.Data.DataTable"/> that describes the column metadata of the <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/>.
            </summary>
            <returns>A <see cref="T:System.Data.DataTable"/> that describes the column metadata.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetString(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.String"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Object"/>.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The <see cref="T:System.Object"/> value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetValues(System.Object[])">
            <summary>
            Return all the columns in the current row.
            </summary>
            <param name="values">An array of <see cref="T:System.Object"/> to copy the attribute columns into.</param>
            <returns>The number of instances of <see cref="T:System.Object"/> in the array.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.IsDBNull(System.Int32)">
            <summary>
            Return a value that indicates whether the column data contains non-existent or missing values.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>true if the specified column value is equivalent to <see cref="T:System.DBNull"/>; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.NextResult">
            <summary>
            Advances the <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> to the next result, when reading the results of batch SQL statements.  Currently Batch results are not supported.
            </summary>
            <returns>true if there are more result sets; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.Read">
            <summary>
            Advances the <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> to the next record.
            </summary>
            <returns>true if there are more rows; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataReader.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the rows in the data reader.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the rows in the data reader.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.Depth">
            <summary>
            Return a number indicating the depth of nesting for the current row.  Not Implemented
            </summary>
            <value>Nesting Depth.</value>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.FieldCount">
            <summary>
            Return the number of columns in the current row.
            </summary>
            <value>Number of columns.</value>
            <returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.HasRows">
            <summary>
            Return true if the <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> contains one or more rows, otherwise false.
            </summary>
            <value><c>true</c> if this instance has rows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.IsClosed">
            <summary>
            Return true if the specified <see cref="T:InterSystems.Data.IRISClient.IRISDataReader"/> instance has been closed, otherwise false.
            </summary>
            <value></value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.Item(System.Int32)">
            <summary>
            Return the value of the specified column in its native DotNet type given the column ordinal.
            </summary>
            <value>The zero-based column ordinal.</value>
            <returns>The value of the specified column in its native DotNet type.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.Item(System.String)">
            <summary>
            Return the value of the specified column in its native DotNet type given the column name.
            </summary>
            <value>The column name.</value>
            <returns>The value of the specified column in its native DotNet type.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataReader.RecordsAffected">
            <summary>
            Return the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            <value>The number of rows.</value>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISDataSourceEnumerator">
            <summary>
            Provides a mechanism for enumerating all known instances of IRIS Server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISDataSourceEnumerator.GetDataSources">
            <summary>
            Retrieves a <see cref="T:System.Data.DataTable"/> containing information about all known IRIS Servers.
            </summary>
            <returns>Returns a <see cref="T:System.Data.DataTable"/> containing information about the all known IRIS Servers.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISDataSourceEnumerator.Instance">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.IRISClient.IRISDataSourceEnumerator"/>, which can be used to retrieve information about all known IRIS Server instances.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISError">
            <remarks>
            Collects information relevant to a warning or error returned by the IRIS Server database.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISError.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Construct a IRISError instance.
            </summary>
            <param name="message">Short error message</param>
            <param name="state">SQL State</param>
            <param name="nativeerror">Native IRIS error</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISError.#ctor(System.String,System.String)">
            <summary>
            Construct a IRISError instance.
            </summary>
            <param name="message">Short error message</param>
            <param name="state">SQL State</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISError.#ctor(System.String)">
            <summary>
            Construct a IRISError instance.
            </summary>
            <param name="message">Short error message.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISError.ToString">
            <summary>
            Convert error to a String.
            </summary>
            <returns>Error message.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISError.Message">
            <summary>
            Gets a short description of the error.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISError.NativeError">
            <summary>
            Return the IRIS specific error information.
            </summary>
            <value>The native error.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISError.State">
            <summary>
            Gets the five-character error code that follows the ANSI SQL standard.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISErrorCollection">
            <remarks>
            Collects all errors generated when using the <see cref="T:InterSystems.Data.IRISClient.IRISDataAdapter"/>. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISErrorCollection.Add(InterSystems.Data.IRISClient.IRISError)">
            <summary>
            Add Error to <see cref="T:InterSystems.Data.IRISClient.IRISErrorCollection"/>.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISErrorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the <see cref="T:InterSystems.Data.IRISClient.IRISError"/> elements of the <see cref="T:InterSystems.Data.IRISClient.IRISErrorCollection"/> into an array,
            starting at the specified index within the array.
            </summary>
            <param name="array">The array into which to copy the <see cref="T:InterSystems.Data.IRISClient.IRISError"/> elements.</param>
            <param name="index">The starting index of array.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISErrorCollection.GetEnumerator">
            <summary>
            Return a <see cref="T:InterSystems.Data.IRISClient.IRISErrorCollection"/> Enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISErrorCollection.Count">
            <summary>
            Return the number of Errors
            </summary>
            <value>The error count.</value>
            <returns>The number of elements contained in the <see cref="T:InterSystems.Data.IRISClient.IRISErrorCollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISErrorCollection.Item(System.Int32)">
            <summary>
            Return the <see cref="T:InterSystems.Data.IRISClient.IRISError"/> at the specified index.
            </summary>
            <value>The zero-based index of the <see cref="T:InterSystems.Data.IRISClient.IRISError"/> to retrieve.</value>
            <returns><see cref="T:InterSystems.Data.IRISClient.IRISError"/> value</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISException">
            <remarks>
            The exception generated when a warning or error is returned by a IRIS Server database. 
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="si">The si.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISException.Errors">
            <summary>
            Return a <see cref="T:InterSystems.Data.IRISClient.IRISErrorCollection"/> instance
            </summary>
            <value>The errors.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISException.Message">
            <summary>
            Return a short description of the error.
            </summary>
            <value>The error message.</value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISException.NativeError">
            <summary>
            Return the IRIS specific error information.
            </summary>
            <value>The native error.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISException.State">
            <summary>
            Return the five-character error code that follows the ANSI SQL standard.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISFactory">
            <remarks>
            Provides Generic access to IRISProvider functionality. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISFactory.Instance">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.IRISClient.IRISFactory"/>. This can be used to retrieve strongly typed data objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateCommand">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbCommand"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbCommand"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateCommandBuilder">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbCommandBuilder"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbCommandBuilder"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateConnection">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnection"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbConnection"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateConnectionStringBuilder">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnectionStringBuilder"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateDataAdapter">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbDataAdapter"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbDataAdapter"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateDataSourceEnumerator">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbDataSourceEnumerator"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbDataSourceEnumerator"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreateParameter">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbParameter"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISFactory.CreatePermission(System.Security.Permissions.PermissionState)">
            <summary>
            Returns a new <see cref="T:System.Security.CodeAccessPermission"/>.
            Not implemented exception will be thrown
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISFactory.CanCreateDataSourceEnumerator">
            <summary>
            Returns true if a IRISDataSourceEnumerator can be created; otherwise false 
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISInfoMessageEventArgs">
            <summary>
            Provides data for the InfoMessage event.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISInfoMessageEventArgs.ToString">
            <summary>
            Retrieves a string representation of the InfoMessage event.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISInfoMessageEventArgs.Errors">
            <summary>
            Gets the collection of warnings sent from the server.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISInfoMessageEventArgs.Message">
            <summary>
            Gets the full text of the error sent from the database.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISInfoMessageEventArgs.Source">
            <summary>
            Gets the name of the object that generated the error.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISInfoMessageEventHandler">
            <remarks>
            Represents the method that will handle the InfoMessage event of a <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.ADO.IRISIterator">
            <summary>
             Allows iterating over a global in the $ORDER sense by returning an iterator that can be 
             used to extract subscripts and global node values.
             
             The global reference (globalName + subscripts) passed to this method specifies the root
             global node.The IRISIterator returned will iterate over the immediate children
             of the root node. For example, for the following global:
                  ^gbl(1)="a"
                  ^gbl(1,11)="b"
                  ^gbl(1,12)="c"
                  ^gbl(2)="d"
             Calling GetIRISIterator("^gbl") will return an iterator that traverses the immediate
             children of ^gbl, that is, ^gbl(1) and ^gbl(2). Calling GetIRISIterator("^gbl",1) will
             return an iterator that traverses the immediate children of ^gbl(1), that is, ^gbl(1,11) and ^gbl(1,12).
            
            </summary>
            <example>
            <para>
            //The iterator is most easily used with a foreach loop because it implements the
            //System.Collections.IEnumerator interface, although the MoveNext() method can be called directly
            //if desired.
            //If an <code>IRIS</code> object called IRISNativeAPI has been instantiated, then:
            </para>
            <code>
             foreach (var node in IRISNativeAPI.GetIRISIterator("myGlobalName", "mySubscriptName"))
             {
                Console.WriteLine(node);
             }
             
             foreach (var node in IRISNativeAPI.GetIRISReverseIterator("myGlobalName", "mySubscriptName"))
             {
                Console.WriteLine(node);
             }
            </code>
            </example>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.#ctor(InterSystems.Data.IRISClient.ADO.IRIS,System.String,System.Int32,System.Object[])">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="name"></param>
            <param name="direction"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.#ctor(InterSystems.Data.IRISClient.ADO.IRIS,System.Int32,System.String,System.Int32,System.Object[])">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="prefetchSizeHint"></param>
            <param name="name"></param>
            <param name="direction"></param>
            <param name="subscripts"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.GetEnumerator">
            <summary>
            Implementation of required IEnumerator method GetEnumerator(), which is called 
            by C# when the iterator is used in a foreach loop. 
            </summary>
            <returns>This IRISIterator object</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.StartFrom(System.Object)">
            <summary>
            Allows iteration to start from a specified subscript.
            </summary>
            <param name="subscript"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.MoveNext">
            <summary>
            Implementation of <code>System.Collections.IEnumerator</code> MoveNext method.
            This can be called directly if desired.
            </summary>
            <returns>true if the next value was retrieved, false if there are no more values.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ADO.IRISIterator.Reset">
            <summary>
            Resets the iterator so iteration can happen again. If Reset() is called after a foreach loop
            the iterator can be used again.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.ADO.IRISIterator.Current">
            <summary>
            The current value in the global for the corresponding subscript. This is what is assigned into 
            the var in a foreach loop.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.ADO.IRISIterator.CurrentSubscript">
            <summary>
            The lowest level subscript that corresponds to the current value.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames">
            <summary>
            Provides a list of constants for use with the GetSchema method to retrieve metadata collections.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Columns">
            <summary>
            A constant for use with the GetSchema method that represents the Columns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Indexes">
            <summary>
            A constant for use with the GetSchema method that represents the Indexes collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.ProcedureColumns">
            <summary>
            A constant for use with the GetSchema method that represents the ProcedureColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.ProcedureParameters">
            <summary>
            A constant for use with the GetSchema method that represents the ProcedureParameters collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Procedures">
            <summary>
            A constant for use with the GetSchema method that represents the Procedures collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Tables">
            <summary>
            A constant for use with the GetSchema method that represents the Tables collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Views">
            <summary>
            A constant for use with the GetSchema method that represents the Views collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.ColumnPrivileges">
            <summary>
            A constant for use with the GetSchema method that represents the ColumnPrivileges collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.ForeignKeys">
            <summary>
            A constant for use with the GetSchema method that represents the ForeignKeys collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.PrimaryKeys">
            <summary>
            A constant for use with the GetSchema method that represents the PrimaryKeys collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.SpecialColumns">
            <summary>
            A constant for use with the GetSchema method that represents the SpecialColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.TablePrivileges">
            <summary>
            A constant for use with the GetSchema method that represents the TablePrivileges collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Databases">
            <summary>
            A constant for use with the GetSchema method that represents the Databases collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.IndexColumns">
            <summary>
            A constant for use with the GetSchema method that represents the IndexColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.Users">
            <summary>
            A constant for use with the GetSchema method that represents the Users collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISMetaDataCollectionNames.ViewColumns">
            <summary>
            A constant for use with the GetSchema method that represents the ViewColumns collection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISParameter">
            <remarks>
            Represents a parameter to a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> and optionally its mapping to <see cref="T:System.Data.DataSet"/> columns. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses the parameter name
            and a value of the new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/>.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="value">An <see cref="T:System.Object"/> that is the value of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/>.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses
            the parameter name and the IRIS data type.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType,System.String)">
            <summary>
            Test API.  Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses
            the parameter name, IRIS data type and name of the Source column.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
            <param name="sourcecolumn">Name of the source column</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses
            the parameter name, <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> and size of the parameter.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses the parameter name,
            the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"/>, nullable,
            the precision of the parameter, the scale of the parameter, the source column, a
            DataRowVersion to use, and the value of the parameter.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="cacheType">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="parameterDirection">One of the ParameterDirection values.</param>
            <param name="precision">The total number of digits to the left and right of the decimal point to which Value is resolved.</param>
            <param name="scale">The total number of decimal places to which Value is resolved.</param>
            <param name="srcColumn">The name of the source column.</param>
            <param name="srcVersion">One of the DataRowVersion values.</param>
            <param name="SourceColumnNullMapping">true if the value of the field can be null; otherwise false.</param>
            <param name="value">An Object that is the value of the IRISParameter.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses the parameter name,
            the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"/>, nullable,
            the precision of the parameter, the scale of the parameter, the source column, a
            DataRowVersion to use, and the value of the parameter.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="cacheType">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="parameterDirection">One of the ParameterDirection values.</param>
            <param name="isNullable">true if the value of the field can be null; otherwise false.</param>
            <param name="precision">The total number of digits to the left and right of the decimal point to which Value is resolved.</param>
            <param name="scale">The total number of decimal places to which Value is resolved.</param>
            <param name="srcColumn">The name of the source column.</param>
            <param name="srcVersion">One of the DataRowVersion values.</param>
            <param name="value">An Object that is the value of the IRISParameter.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.#ctor(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> class that uses
            the parameter name, <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/>, size of the parameter, and
            name of source column.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="sourcecolumn">The sourcecolumn.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.ResetIRISDbType">
            <summary>
            Resets the type associated with this <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.ResetDbType">
            <summary>
            Resets the type associated with this <see cref="T:System.Data.Common.DbParameter"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameter.ToString">
            <summary>
            Return a string that contains the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.ParameterName"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.SourceColumnNullMapping">
            <summary>
            Sets or gets a value which indicates whether the source column is nullable. This lets <see cref="T:System.Data.Common.DbCommandBuilder"/> correctly generate Update statements for nullable columns.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.DbType">
            <summary>
            Return/Set the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.DbType"/> of the parameter.
            </summary>
            <value>The <see cref="P:InterSystems.Data.IRISClient.IRISParameter.DbType"/> </value>
            <returns>One of the <see cref="T:System.Data.DbType"></see> values. The default is <see cref="F:System.Data.DbType.String"></see>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType"></see>. </exception>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.Direction">
            <summary>
            Return/Set a value to indicates <see cref="T:System.Data.ParameterDirection"/>. For example, Input, output,
            bidirectional, or a stored procedure return value parameter.  Default is Input.
            </summary>
            <value>Indicates <see cref="T:System.Data.ParameterDirection"/>.</value>
            <returns>One of the <see cref="T:System.Data.ParameterDirection"></see> values. The default is Input.</returns>
            <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection"></see> values. </exception>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.IsNullable">
            <summary>
            Return/Set a value indicating if the parameter accepts null values.
            </summary>
            <value>A value indicating if the parameter accepts null values.</value>
            <returns>true if null values are accepted; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.IsStream">
            <summary>
            Return true if the parameter is a IRIS stream, false otherwise.
            </summary>
            <value><c>true</c> if this instance is stream; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.IsBound">
            <summary>
            Return true if the parameter is a Bound, false otherwise.
            </summary>
            <value><c>true</c> if this instance is bound; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.IsInBound">
            <summary>
            Return true if the parameter is a Bound, false otherwise.
            </summary>
            <value><c>true</c> if this instance is bound; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType">
            <summary>
            Return/Set the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.IRISDbType"/> of the parameter.
            </summary>
            <value>The IRISDb type.</value>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.ParameterName">
            <summary>
            Return/Set the name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/>.
            </summary>
            <value>The name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/>.</value>
            <returns>The name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"></see>. The default is an empty string.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.Precision">
            <summary>
            Return/Set the maximum number of digits used to represent the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.Value"/> property.
            </summary>
            <value>The maximum number of digits.</value>
            <returns>The maximum number of digits used to represent the Value property of a Parameter object. The default value is 0, which indicates that the IRISProvider sets the precision for Value.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.Scale">
            <summary>
            Return/Set the number of decimal places to which <see cref="P:InterSystems.Data.IRISClient.IRISParameter.Value"/> is resolved.
            </summary>
            <value>The number of decimal places.</value>
            <returns>The number of decimal places to which <see cref="!:IRISParameter.Value"></see> is resolved. The default is 0.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.Size">
            <summary>
            Return/Set the maximum size of the data within the column.
            </summary>
            <value>The maximum size of data.</value>
            <returns>The maximum size, of the data within the column. The default value is inferred from the the parameter value.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.SourceColumn">
            <summary>
            Return/Set the name of the source column mapped to the DataSet and used for loading or returning the <see cref="P:InterSystems.Data.IRISClient.IRISParameter.Value"/>.
            </summary>
            <value>The source column.</value>
            <returns>The name of the source column.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.SourceVersion">
            <summary>
            Return/Set the <see cref="T:System.Data.DataRowVersion"/> to use when you load <see cref="P:InterSystems.Data.IRISClient.IRISParameter.Value"/>.
            </summary>
            <value>The <see cref="T:System.Data.DataRowVersion"/>.</value>
            <returns>One of the <see cref="T:System.Data.DataRowVersion"></see> values. The default is Current.</returns>
            <exception cref="T:System.ArgumentException">The property was not set one of the <see cref="T:System.Data.DataRowVersion"></see> values. </exception>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameter.Value">
            <summary>
            Return/Set the value of the parameter.
            </summary>
            <value>The parameter value.</value>
            <returns>An <see cref="T:System.Object"></see> that is the value of the parameter. The default value is null.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISParameterCollection">
            <remarks>
            Represents a collection of <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> associated with a <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(System.Object)">
            <summary>
            Adds the specified value to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The index of the new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(InterSystems.Data.IRISClient.IRISParameter)">
            <summary>
            Adds the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to add to the collection.</param>
            <returns>
            <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(System.String,InterSystems.Data.IRISClient.IRISDbType)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="IRISType">One of the <see cref="T:InterSystems.Data.IRISClient.IRISDbType"/> values.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32)">
            <summary>
            Adds a new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> given
            the parameter name, data type, and column length.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="IRISType">One of the <see cref="T:InterSystems.Data.IRISClient.IRISDbType"/> values.</param>
            <param name="size">The length of the column.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Add(System.String,InterSystems.Data.IRISClient.IRISDbType,System.Int32,System.String)">
            <summary>
            Adds a new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> given
            the parameter name, data type, column length, and source column.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="IRISType">One of the <see cref="T:InterSystems.Data.IRISClient.IRISDbType"/> values.</param>
            <param name="size">The length of the column.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Clear">
            <summary>
            Removes all <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> objects from the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Contains(InterSystems.Data.IRISClient.IRISParameter)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> within the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> instance in the collection to find.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> is in the collection, otherwise, false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Contains(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> passed as an <see cref="T:System.Object"/>  is in this <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> contains the value, otherwise false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Contains(System.String)">
            <summary>
            Return true if a <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object with the specified parameter name exists in the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object to find.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> contains the parameter, otherwise false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> to the specified one-dimensional <see cref="T:System.Array"/> starting at the specified destination <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the current <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.</param>
            <param name="index">An integer that represents the index in the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> at which copying starts.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.GetEnumerator">
            <summary>
            Return an enumerator that iterates through the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.IndexOf(InterSystems.Data.IRISClient.IRISParameter)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> within the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object in the collection to find.</param>
            <returns>
            The zero-based location of the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> within the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.IndexOf(System.Object)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> passed as an <see cref="T:System.Object"/> within the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to find.</param>
            <returns>
            The zero-based location of the specified <see cref="T:System.Object"/> that is a <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> within the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.IndexOf(System.String)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> with the specified name.
            </summary>
            <param name="parameterName">The case-sensitive name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> to find.</param>
            <returns>
            The zero-based location of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object with the specified case-sensitive name.
            </returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:System.Object"/> into the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the object should be inserted.</param>
            <param name="value">A <see cref="T:System.Object"/> to be inserted in the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.Remove(System.Object)">
            <summary>
            Removes the <see cref="T:System.Object"/> from the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.
            </summary>
            <param name="value">A <see cref="T:System.Object"/> to be removed from the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/>.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> from the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.RemoveAt(System.String)">
            <summary>
            Removes the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> from the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"/> with the specified parameter name.
            </summary>
            <param name="parameterName">The name of the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> object to remove.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.AddRange(InterSystems.Data.IRISClient.IRISParameter[])">
            <summary>
            Adds an array of IRISParameter values to the end of the IRISParameterCollection.
            </summary>
            <param name="values">An array of IRISParameter objects to add to the collection.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of values to the end of the IRISParameterCollection
            </summary>
            <param name="values">The Array values to add.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.GetParameter(System.Int32)">
            <summary>
            GetParameter as DbParameter using index
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.GetParameter(System.String)">
            <summary>
            GetParameter as DbParameter using parameter name
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
            <summary>
            Set DbParameter using index
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
            <summary>
            Set DbParameter using parameter name
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.IsSynchronized">
            <summary>
            Gets a value that indicates whether the IRISParameterCollection is synchronized. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the IRISParameterCollection. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.IsFixedSize">
            <summary>
            Gets a value that indicates whether the IRISParameterCollection has a fixed size. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.IsReadOnly">
            <summary>
            Gets a value that indicates whether the IRISParameterCollection is read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.Count">
            <summary>
            Return the number of User defined <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> instances.
            </summary>
            <value>The number of parameters.</value>
            <returns>The number of elements contained in the <see cref="T:InterSystems.Data.IRISClient.IRISParameterCollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.Item(System.Int32)">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> at the specified index.
            </summary>
            <value>The zero-based index of the parameter to retrieve.</value>
            <returns>The <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> at the specified index.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISParameterCollection.Item(System.String)">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> with the specified name.
            </summary>
            <value>The name of the parameter to retrieve.</value>
            <returns>The <see cref="T:InterSystems.Data.IRISClient.IRISParameter"/> with the specified name.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISPool">
            <remarks>
            IRISPool holds the devices that are connected to a particular IRIS Server database.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISPoolManager">
            <summary>
            IRISPoolManager is a static class used to obtain a pooled device connection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.IdleCount">
            <summary>
            Total number idle connections in all the pools.
            </summary>
            <returns>Idle connection count</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.IdleCount(InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Total number idle connections in the pool matching the connection object.
            </summary>
            <param name="conn">IRISADOConnection object</param>
            <returns>Idle connection count</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.InUseCount">
            <summary>
            Total number InUse connections in all the pools.
            </summary>
            <returns>InUse connection count</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.InUseCount(InterSystems.Data.IRISClient.IRISADOConnection)">
            <summary>
            Total number InUse connections in the pool matching the connection object.
            </summary>
            <param name="conn">IRISADOConnection object</param>
            <returns>InUse connection count</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.RecycleConnections(InterSystems.Data.IRISClient.IRISADOConnection,System.Boolean)">
            <summary>
            Recycles connections matching the connection object
            </summary>
            <param name="conn">IRISADOConnection object</param>
            <param name="remove">
            true: removes all idle connections in the pool and tags InUse devices as MarkedToClose. 
            false: returns as many InUse Connections to the Idle Pool as possible.
            </param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.RecycleAllConnections(System.Boolean)">
            <summary>
            Recycles connections in all Pools
            </summary>
            <param name="remove">
            true: removes all idle connections in the pool and tags InUse devices as MarkedToClose. 
            false: returns as many InUse Connections to the Idle Pool as possible.
            </param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.RemoveAllPoolConnections">
            <summary>
            This removes all the device connections and removes the Pools
            Does not care about what state the connections are in
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISPoolManager.RemoveAllIdleConnections">
            <summary>
            Remove Idle connections from all connection Pools
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISPoolManager.ActiveConnectionCount">
            <summary>
            Total number of established connections in all the pools.
            Count includes Idle and InUse connections.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISRowUpdatedEventArgs">
            <remarks>
            Provides data for the RowUpdated event. 
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.IRISClient.IRISRowUpdatedEventArgs"/> class.
            </summary>
            <param name="row">The row.</param>
            <param name="command">The command.</param>
            <param name="statementType">Type of the statement.</param>
            <param name="tableMapping">The table mapping.</param>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISRowUpdatedEventArgs.Command">
            <summary>
            Return/Set the SqlCommand to execute when performing the Update.
            </summary>
            <value>The <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.</value>
            <returns>The <see cref="T:InterSystems.Data.IRISClient.IRISCommand"></see> executed when <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see> is called.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISRowUpdatedEventHandler">
            <remarks>
            Represents the method that will handle the RowUpdated event of a IRISDataAdapter.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISRowUpdatingEventArgs">
            <remarks>
            Provides data for the RowUpdating event.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the IRISRowUpdatingEventArgs class.
            </summary>
            <param name="row">The DataRow to update.</param>
            <param name="command">The IRISCommand to execute during the update operation.</param>
            <param name="statementType">One of the StatementType values that specifies the type of query executed.</param>
            <param name="tableMapping">The DataTableMapping sent through Update.</param>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISRowUpdatingEventArgs.BaseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISRowUpdatingEventArgs.Command">
            <summary>
            Gets or sets the <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/> to execute when performing the Update.
            </summary>
            <value>The <see cref="T:InterSystems.Data.IRISClient.IRISCommand"/>.</value>
            <returns>The <see cref="T:IRISCommand"></see> to execute during the <see cref="M:IRISDataAdapter.Update(System.Data.DataSet)"></see>.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISRowUpdatingEventHandler">
            <remarks>
            Represents the method that will handle the RowUpdating event of a IRISDataAdapter.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISTransaction">
            <remarks>
            Represents an SQL transaction to be made in IRIS Server database. This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISTransaction.Commit">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISTransaction.Dispose(System.Boolean)">
            <summary>
            Dispose of transaction
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISTransaction.Rollback">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISTransaction.Rollback(System.String)">
            <summary>
            Rolls back a transaction from a pending state to a savepoint.
            </summary>
            <param name="savePointName"></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISTransaction.Save(System.String)">
            <summary>
            Establish a savepoint name with the IRIS Server
            </summary>
            <param name="savePointName"></param>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISTransaction.DbConnection">
            <summary>
            Return DbConnection
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISTransaction.Connection">
            <summary>
            Return the <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> object associated with the transaction,
            or null if the transaction is no longer valid.
            </summary>
            <value>The <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/>.</value>
            <returns>The <see cref="T:InterSystems.Data.IRISClient.IRISADOConnection"/> object to associate with the transaction.</returns>
        </member>
        <member name="P:InterSystems.Data.IRISClient.IRISTransaction.IsolationLevel">
            <summary>
            Returns the <see cref="P:InterSystems.Data.IRISClient.IRISTransaction.IsolationLevel"/> for this transaction.
            </summary>
            <value>The <see cref="P:InterSystems.Data.IRISClient.IRISTransaction.IsolationLevel"/>.</value>
            <returns>The <see cref="T:System.Data.IsolationLevel"></see> for this transaction. The default is ReadCommitted.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.PARAM_MODE">
            <remarks>
            Parameter Mode or Kind. The PreParser and IRISCommand classifies a Parameter into one of these types
            Works with IRISParameter class which may be converted to CacheParameter
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.STMT_TYPE">
            <summary>
            Statement Type. The PreParser and IRISCommand classifies the input statement into one of these types
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.ODC">
            <remarks>
            Summary description for ODC.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.Common.ADP">
            <summary>
            Summary description for ADP.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISDbType">
            <remarks>
            List of IRIS Supported Types
            </remarks>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.TimeStamp">
            <summary>
            IRISTimeStamp
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.UniqueIdentifier">
            <summary>
            IRISGUID
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.ResultSet">
            <summary>
            IRISResultSet
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Bit">
            <summary>
            IRISBoolean
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.TinyInt">
            <summary>
            IRISByte
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.BigInt">
            <summary>
            IRISInt64
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.LongVarBinary">
            <summary>
            IRISStreamBinary
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.VarBinary">
            <summary>
            IRISBinary
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.LongVarChar">
            <summary>
            IRISStreamChar
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Numeric">
            <summary>
            IRISSingle
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Int">
            <summary>
            IRISInt32
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.SmallInt">
            <summary>
            IRISInt16
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Double">
            <summary>
            IRISDouble
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Date">
            <summary>
            IRISDateTime  
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.Time">
            <summary>
            IRISTime
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.DateTime">
            <summary>
            IRISDateTime (Timestamp)
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISDbType.NVarChar">
            <summary>
            IRISString
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.TypeMap">
            <summary>
            Summary description for TypeMap.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.Common.Res">
            <remarks>
            Summary description for Res.
            </remarks>
        </member>
        <member name="T:InterSystems.CConnectionsInterface">
            <remarks>
            Summary description for CConnectionsInterface.
            </remarks>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.InvokeDialog(System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Invoke dialog using the following parameters.
            </summary>
            <param name="sConnName"></param>
            <param name="sConnString"></param>
            <param name="sNameSpace"></param>
            <param name="sUserName"></param>
            <param name="sPassword"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.InvokeDialog(System.String@,System.String@,System.String@,System.String@,System.String@,System.String)">
            <summary>
            Invoke dialog using the following parameters.
            </summary>
            <param name="sConnName"></param>
            <param name="sConnString"></param>
            <param name="sNameSpace"></param>
            <param name="sUserName"></param>
            <param name="sPassword"></param>
            <param name="sTitle"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.openserverkey(System.Boolean,System.Boolean)">
            <summary>
            Open Servers Registry key
            </summary>
            <param name="bwrite"></param>
            <param name="bUser"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.openserversubkey(System.String,System.Boolean,System.Boolean)">
            <summary>
            Open Server key.
            </summary>
            <param name="subkey"></param>
            <param name="bwrite"></param>
            <param name="bUser"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastConnectionName">
            <summary>
            Get last Connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastConnectionName(System.String)">
            <summary>
            Set last connection name.
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastNSProjec(System.String,System.String@,System.String@)">
            <summary>
            Get last Namespace and Project.
            </summary>
            <param name="sName"></param>
            <param name="sNamespace"></param>
            <param name="sProject"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastNSProjec(System.String,System.String,System.String)">
            <summary>
            Set last namespace and project.
            </summary>
            <param name="sName"></param>
            <param name="sNamespace"></param>
            <param name="sProject"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.DeleteConnFromRegistry(System.String)">
            <summary>
            Delete Connection entry from Regsitry
            </summary>
            <param name="ConnName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.AddConnToRegistry(System.String,System.String,System.String)">
            <summary>
            Add Connection to Registry.
            </summary>
            <param name="ConnName"></param>
            <param name="ipAdress"></param>
            <param name="PortNo"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetConnectionString(System.String)">
            <summary>
            Get Server connection string.
            </summary>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetNameOfConnection(System.String,System.String@)">
            <summary>
            Get Name of the connection.
            </summary>
            <param name="sConStr"></param>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetUserName">
            <summary>
            Get default Username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetUserName(System.String)">
            <summary>
            Set default Username.
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetTelnetPort(System.String,System.String)">
            <summary>
            Get Server Telnet port.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetTelnetPort(System.String,System.String)">
            <summary>
            Set Telnet port.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sPort"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetComment(System.String,System.String)">
            <summary>
            Get Server Comment from Registry.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetComment(System.String,System.String)">
            <summary>
            Set server comment
            </summary>
            <param name="sConnectionName"></param>
            <param name="sComment"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetAuthenticationMethod(System.String,System.String)">
            <summary>
            Get Authentication Method (simple/kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetAuthenticationMethod(System.String,System.String)">
            <summary>
            Set Authentication Method (simple/kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetConnectionSecurityLevel(System.String,System.String)">
            <summary>
            Get Kerberos security level.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetConnectionSecurityLevel(System.String,System.String)">
            <summary>
            Set Connection Security Level (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerType(System.String,System.String)">
            <summary>
            Get Server OS type.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerType(System.String,System.String)">
            <summary>
            Set Server OS Type.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServicePrincipalName(System.String,System.String)">
            <summary>
            Get Service Principal Name from Registry (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServicePrincipalName(System.String,System.String)">
            <summary>
            Set Service Principal Name (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerUsername(System.String,System.String)">
            <summary>
            Set Server Username.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerUsername(System.String,System.String)">
            <summary>
            Get Server connection username.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerPassword(System.String,System.String)">
            <summary>
            Set server password.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerPassword(System.String,System.String)">
            <summary>
            Get Server Password.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastNamespace(System.String,System.String)">
            <summary>
            Get last Namespace.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastNamespace(System.String,System.String)">
            <summary>
            Set last namespace.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.LoginDialog(System.String,System.String@,System.String@)">
            <summary>
            Invoke Login Dialog.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sUsername"></param>
            <param name="sPassword"></param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.ConnectionList">
            <remarks>
            Summary description for ConnectionList.
            </remarks>
        </member>
        <member name="F:InterSystems.ConnectionList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.ConnectionNet">
            <remarks>
            Access Class to create Connection Dialog
            </remarks>
        </member>
        <member name="M:InterSystems.ConnectionNet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionNet.ConnectionDialog">
            <summary>
            Invoke Connection dialog
            </summary>
        </member>
        <member name="T:InterSystems.Security.PwdMgr">
            <remarks>
            Password Management.
            </remarks>
        </member>
        <member name="T:InterSystems.Form1">
            <remarks>
            Summary description for Form1.
            </remarks>
        </member>
        <member name="F:InterSystems.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:InterSystems.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.Login">
            <remarks>
            Summary description for Login.
            </remarks>
        </member>
        <member name="F:InterSystems.Login.m_ConName">
            <summary>
            Required designer variable.
            </summary>
            
        </member>
        <member name="M:InterSystems.Login.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.Login.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.List.IRISListReader">
            <summary>
            IRISListReader - Read only methodes to extract information from $List using IRISList class
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.#ctor(System.Text.Encoding)">
            <summary>
            IRISListReader constructor, create an empty list
            </summary>
            <param name="Locale">server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.#ctor(System.Int32,System.Text.Encoding)">
            <summary>
            IRISListReader constructor with buffer allocation
            </summary>
            <param name="iLength">size of initially allocated buffer</param>
            <param name="Locale">server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.#ctor(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            IRISListReader constructor from exiting buffer, no copy performed
            </summary>
            <param name="buffer">existing buffer assigned to IRISListReader</param>
            <param name="iLength">size of initially allocated buffer</param>
            <param name="Locale">server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.#ctor(InterSystems.Data.IRISClient.List.IRISListBuilder)">
            <summary>
            IRISListReader copy constructor 
            </summary>
            <param name="List">existing IRISListReader to be copied to new one</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.#ctor(InterSystems.Data.IRISClient.List.ListItem,System.Text.Encoding)">
            <summary>
            IRISListReader copy constructor from existing ListItem
            </summary>
            <param name="litem">ListItem <see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <param name="Locale">server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.setList(System.Byte[])">
            <summary>
            Assign existing buffer to IRISListReader, no copy performed
            </summary>
            <param name="buffer">existing buffer assigned to IRISListReader</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.next">
            <summary>
            Move offset pointer tp next item
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.isEnd">
            <summary>
            Does offset points to the end of the list
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.isNull">
            <summary>
            Is current element Null, curren buffer offset not modified
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.moveToEnd">
            <summary>
             Set offset to the end of the buffer
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetBuffer">
            <summary>
             Return buffer, no copy
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetBoolean(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetBoolean">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetDouble(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetDouble">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetFloat(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetFloat">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetInt(System.Int32)">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetInt">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetLong(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetLong">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetShort(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetShort">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetString">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetBigDecimal(System.Int32)">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetBigDecimal">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetTime(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetTime">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetDate(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetDate">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetTimestamp(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetTimestamp">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetByteArray(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetByteArray">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetOneByte(System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset.
            </summary>
            <param name="offset">offset to start of $list element</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.ToString">
            <summary>
            Returns the visual representation of buffer as $list.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.GetObject">
            <summary>
            Returns the $list item in the buffer at current offset, ofset set to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.count">
            <summary>
            Returns number of elements in the $list, starting from offset. Offset reset to 0
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getGuid">
            <summary>
            Returns ements as Gui
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getUri">
            <summary>
            Returns ements as Uri
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getVersion">
            <summary>
            Returns ements as Version
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getInt16">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getInt32">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getInt64">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getUInt16">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getUInt32">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getUInt64">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getSingle">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getDoubleW">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getDecimal">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getBooleanW">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getByte">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getByteW">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getSByteW">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getSByte">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getChar">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListReader.getInnerList">
            <summary>
            Returns the $list item in the buffer
            Used by XEP
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.List.IRISListBuilder">
            <summary>
            IRISListBuilder - Class that represent IRIS's $list on client.  
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.#ctor(System.Text.Encoding)">
            <summary>
            Construct empty IRISListBuilder object with  default CHUNKSIZE(256) buffer and specifyed locale
            </summary>
            <param name="Locale">Server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.#ctor(System.Int32,System.Text.Encoding)">
            <summary>
            Construct empty IRISListBuilder object with  nLen buffer and specifyed locale
            </summary>
            <param name="Locale">Server locale, <see cref="T:System.Text.Encoding"/></param>
            <param name="nLen">Length of allocated buffer </param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.GetBuffer">
            <summary>
             Internal buffer, not a copy
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.clearList">
            <summary>
            Reset IRISListBuilder object pointers, buffer is preserved
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.GetLength">
            <summary>
            Length of $list object, most likely less then buffer size.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetLocale(System.Text.Encoding)">
            <summary>
            Set Locale
            </summary>
            <param name="Locale">Server locale, <see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.GetLocale">
            <summary>
            Get Locale
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.append(InterSystems.Data.IRISClient.List.IRISListBuilder)">
            <summary>
            Append IRISListBuilder buffer to the end of this one
            </summary>
            <param name="list">IRISListBuilder that will be appended to this</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Append(System.Byte[])">
            <summary>
            Append  buffer to the end of this one
            </summary>
            <param name="byteArray">buffer that will be appended to this</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetList(System.Byte[])">
            <summary>
            Assign buffer to this IRISListBuilder
            </summary>
            <param name="byteArray">buffer that will be assigned, no copy will be made</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.GetData">
            <summary>
            Get copy of buffer
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.reset">
            <summary>
             Reset pointer to the beginig of list
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetNull">
            <summary>
             Add null element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Int32)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Int16)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Byte)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.String)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Int64)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Double)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Single)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Byte[])">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(InterSystems.Data.IRISClient.List.IRISListBuilder)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Boolean)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.DateTime)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetDate(System.DateTime)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetTime(System.DateTime)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetTimestamp(System.DateTime)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetUndefined">
            <summary>
             Add element that represents IRIS UNDEFINED to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.SetObject(System.Object)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.ToString">
            <summary>
            Returns the visual representation of buffer as $list.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.copyData(System.Byte[],System.Int32)">
            <summary>
            Copy list contants to the buffer starting with offest.
            used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.atEnd">
            <summary>
            True if at the end of the list
            used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.getBytes">
            <summary>
            return internal list as byte array, simplified version of IRISList, does not do conversions
            used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.Decimal)">
            <summary>
            Set Decimal to list
            used by XEP
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISListBuilder.Set(System.UInt64)">
            <summary>
             Add element to the end of the list 
             </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.List.IRISList">
            <summary>
            IRISList - Static access to $list elements. NOT thread safe
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_UNDEF">
            <summary>
            $list data type - Undefined 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_PLACEHOLDER">
            <summary>
            $list data type - future use (not used)
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_ASCII">
            <summary>
            $list data type - ASCII data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_UNICODE">
            <summary>
            $list data type - Unicode data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_XUNICODE">
            <summary>
            $list data type - XUnicode data (not used) 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_POSINT">
            <summary>
            $list data type - Positive integer 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_NEGINT">
            <summary>
            $list data type - Negative integer
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_POSNUM">
            <summary>
            $list data type - Positive decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_NEGNUM">
            <summary>
            $list data type - Negative decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ITEM_DOUBLE">
            <summary>
            $list data type - IEEE double format
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.TWO_SIXTY">
            <summary>
            2**60 mask used for PosixTime positive conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.TWO_SIXTY_NEG">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.TWO_SIXTY_NEG_REV">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.ONE_DAY">
            <summary>
             seconds in one day
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.HOROLOG_ZERO">
            <summary>
             Seconds on $h == 0 -   1840-12-31 at GMT
             </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.POSIX_ZERO">
            <summary>
             # of ticks for POSIXTIME 
             </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.LATIN1LOCALE">
            <summary>
            Latin1 locale
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.IRISList.UNICODELOCALE">
            <summary>
            UNICODE locale
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetListElement(System.Int32,InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
             ListItem objects are passed in to be initialized by getListElement
             To use this API the ListItem.buffer must be defined in the ListItem
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.Next(System.Byte[],System.Int32)">
            <summary>
             return offset to next list element 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetString(InterSystems.Data.IRISClient.List.ListItem,System.Text.Encoding)">
            <summary>
            Returns the String value of ListItem element it. locale can be null
            </summary>
            <param name="it">ListItem element</param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetDouble(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetFloat(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetInt(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetShort(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetLong(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetBigDecimal(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetBigDecimal(InterSystems.Data.IRISClient.List.ListItem,System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <param name="scale">decimal scale to use in returned value</param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/> with scale.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetBoolean(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetOneByte(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetByteArray(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a byte array.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetDate(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetTime(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.GetTimestamp(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.IRISClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>offset to the end of the inserted element plus one</returns>  
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetString(System.Byte[],System.Int32,System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <param name="length">number of characters in the string to set in the list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetUndefined(System.Byte[],System.Int32)">
            <summary>
            adds (byte) 1 onto IRISList. for default Parameters in Stored Procs.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetByteArray(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetByteArray(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <param name="length">number of bytes to copy</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetDouble(System.Byte[],System.Int32,System.Double,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="doubleValue"><see cref="T:System.Double"/></param>
            <param name="bIEEEDouble">Use IEEE format for protocol version greater than 38</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetLong(System.Byte[],System.Int32,System.Int64)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="longValue"><see cref="T:System.Int64"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetULong(System.Byte[],System.Int32,System.UInt64)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="longValue"><see cref="T:System.Int64"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetInt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="intValue"><see cref="T:System.Int32"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetBool(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="b">bool value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.setUndefined(System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetDate(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetTime(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.SetTimestamp(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.HorologFromTime(System.DateTime)">
            <summary>
            Extract time from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.HorologFromDate(System.DateTime)">
            <summary>
            Extract Date from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.TimeFromHorolog(System.Int32)">
            <summary>
            Convert time in HOROLOG format to TimeSpan
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.DateFromHorolog(System.Int32)">
            <summary>
            Convert date in HOROLOG format to DateTime
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.PosixFromDate(System.DateTime)">
            <summary>
            Extract Date and Time from DateTime and return in POSIXTIME format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.DateFromPosix(System.Int64)">
            <summary>
            Convert date and time in POSIXTIME format to Date
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.addListLengthAndType(System.Byte[],System.Int32,System.Int32,System.SByte)">
            stuff methods for formatting $list data into a buffer converting from native type   
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.ToString(System.Byte[],System.Int32,System.Text.Encoding)">
            <summary>
            Returns the visual representation of buffer as $list.
            </summary>
             <param name="buffer">beffer to process</param>
             <param name="length">list length </param>
             <param name="serverLocale">Server locale</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.IRISList.Dump(System.Byte[],System.Int32,System.Int32)">
             <summary>
             Dump buffer to System.Diagnostics.Debug in VS "Memory" foramt
             </summary>
            <param name="buffer">beffer to dump</param>
            <param name="iOffset">first byte to process</param>
            <param name="iLength">number of byets to process, default 2800 if less or equal to 0" </param>
        </member>
        <member name="T:InterSystems.Data.IRISClient.List.ListItem">
            <summary>
            ListItem - data element and itterator for IRISList
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.buffer">
            <summary>
            byte array for data, allocated by caller 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.listBufferEnd">
            <summary>
            pointer to the end of buffer
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.dataOffset">
            <summary>
            current pointer to list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.dataLength">
            <summary>
            lenght of data portion of currect list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.type">
            <summary>
            type of current list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.isNull">
            <summary>
            Is current element empty
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.List.ListItem.nextOffset">
            <summary>
            pointer to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.ListItem.#ctor(System.Byte[],System.Int32)">
             <summary>
            In this constructor the listEnd passed by caller 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.ListItem.#ctor(System.Byte[])">
            <summary>
            In this constructor the buffer length defined by size of buffer array
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.ListItem.#ctor(InterSystems.Data.IRISClient.List.ListItem)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.ListItem.hasNext">
            <summary>
            Does list has next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.List.ListItem.clone">
            <summary>
            shallow copy
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.PreParser.PreParser">
            <remarks>
             This is the interface to the SQL PreParser. A string of SQL and a list of parameters ( bound parameters or empty ) is input.
             The processed string is returned along with a count of parameters found and a classfication of the statement type
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.PreParser.ParseToken">
            <remarks>
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.PreParser.Scanner">
            <remarks>
            Scanner provides facilities for lexical scanning/parsing of text
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.PreParser.Token">
            <remarks>
            This class represents a 'token' parsed from the SQL statement. 
            It records the classification of the token as well as retaining the original string
            representation
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISTypeReferences.QueryRuntimeMode">
            <summary>
            Constants for Query runtime mode.
            </summary>
            WAL316
        </member>
        <member name="M:InterSystems.Data.IRISClient.RegistryUtil.openserverkey(System.Boolean,System.Boolean)">
            <summary>
            Open Servers Registry key
            </summary>
            <param name="bwrite"></param>
            <param name="bUser"></param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.ConnectionUtil">
            <summary cref="T:InterSystems.Data.IRISClient.ConnectionUtil">
            Provides utilities for converting between native connection strings
            and standard connection strings.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ConnectionUtil.GetDotNetConnectionString(System.String)">
            <summary>
            Constructs a .NET connection string from a native connection string.
            </summary>
            <param name="nativeConnStr">The native connection string.</param>
            <returns>The .NET connection string.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ConnectionUtil.GetNativeConnectionString(System.String)">
            <summary>
            Constructs a native connection string from a .NET connection string.
            </summary>
            <param name="dotnetConnStr">The .NET connection string.</param>
            <returns>The native connection string.</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.IRISListUtil">
            <summary>
            A set of static classes to work with $list data in a buffer (thread safe)
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_UNDEF">
            <summary>
            $list data type - Undefined 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_PLACEHOLDER">
            <summary>
            $list data type - future use (not used)
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_ASCII">
            <summary>
            $list data type - ASCII data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_UNICODE">
            <summary>
            $list data type - Unicode data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_XUNICODE">
            <summary>
            $list data type - XUnicode data (not used) 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_POSINT">
            <summary>
            $list data type - Positive integer 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_NEGINT">
            <summary>
            $list data type - Negative integer
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_POSNUM">
            <summary>
            $list data type - Positive decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_NEGNUM">
            <summary>
            $list data type - Negative decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ITEM_DOUBLE">
            <summary>
            $list data type - IEEE double format
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.TWO_SIXTY">
            <summary>
            2**60 mask used for PosixTime positive conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.TWO_SIXTY_NEG">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.TWO_SIXTY_NEG_REV">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.ONE_DAY">
            <summary>
             seconds in one day
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.HOROLOG_ZERO">
            <summary>
             Seconds on $h == 0 -   1840-12-31 at GMT
             </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.POSIX_ZERO">
            <summary>
             # of ticks for POSIXTIME 
             </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.IsNull(System.Byte[],System.Int32)">
            <summary>
            Checks buffer at offset to see if the $list data is null.  
            </summary>
            <param name="buffer">byte array buffer containing $list</param>
            <param name="offset">offset to start of $list element</param>
            <returns>true if $list data is null</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.IsNull(InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Checks buffer at offset to see if the $list data is null.  
            </summary>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>true if $list data is null</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.IsUndefined(System.Byte[],System.Int32)">
            <summary>
            Checks buffer at offset to see if the $list data is undefined.  
            </summary>
            <param name="buffer">byte array buffer containing $list</param>
            <param name="offset">offset to start of $list element</param>
            <returns>true if $list data is undefined</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetBigDecimal(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetBigDecimal(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem,System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <param name="scale">decimal scale to use in returned value</param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/> with scale.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetBoolean(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetByteArray(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a byte array.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetDate(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetDouble(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetFloat(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetInt(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetLong(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetNull(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns true if $list item is null.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetOneByte(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetShort(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetString(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem,System.Text.Encoding)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetString(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem,System.Int32,System.Text.Encoding)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <param name="len">Number of string characters to return, even if $list data contains more.</param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetTime(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetTimestamp(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetUndefined(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws IRISException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>Returns true if $list item is undefined.</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetBool(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="b">bool value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetByteArray(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetByteArray(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <param name="length">number of bytes to copy</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetDate(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetDouble(System.Byte[],System.Int32,System.Double,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="doubleValue"><see cref="T:System.Double"/></param>
            <param name="protocolVersion">protocol version must be greater than 38 to send data using ieee format</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetInt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="intValue"><see cref="T:System.Int32"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetNull(System.Byte[],System.Int32)">
            <summary>
            Sets a null data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetUndefined(System.Byte[],System.Int32)">
            <summary>
            Sets an undefined value into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetLong(System.Byte[],System.Int32,System.Int64)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="longValue"><see cref="T:System.Int64"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <param name="length">number of characters in the string to set in the list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetTime(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.SetTimestamp(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            IRISException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetListLenTypeNextoffset(System.Byte[],System.Int32,InterSystems.Data.IRISClient.ListItem)">
            <summary>
            Returns information about the $list element. Helper method.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.IRISClient.ListItem"/></param>
            <returns>The offset to the data in the list item is returned</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetListType(System.Byte[],System.Int32)">
            <summary>
            Determines the $list data type at the offset in the buffer. Helper method. 
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>The $list data type</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.GetListDataLength(System.Byte[],System.Int32)">
            <summary>
            Determines the length of the data in the $list element. Helper method.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>Length of the data portion of the $list</returns>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.tenstab">
            <summary> Array of chars to lookup the char for the digit in the tenth's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.IRISListUtil.onestab">
            <summary> Array of chars to lookup the char for the digit in the unit's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.grabCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.HorologFromTime(System.DateTime)">
            <summary>
            Extract time from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.HorologFromDate(System.DateTime)">
            <summary>
            Extract Date from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.TimeFromHorolog(System.Int32)">
            <summary>
            Convert time in HOROLOG format to TimeSpan
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.DateFromHorolog(System.Int32)">
            <summary>
            Convert date in HOROLOG format to DateTime
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.PosixFromDate(System.DateTime)">
            <summary>
            Extract Date and Time from DateTime and return in POSIXTIME format
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.IRISListUtil.DateFromPosix(System.Int64)">
            <summary>
            Convert date and time in POSIXTIME format to Date
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.ListItem">
            <summary>
            Class that is used to return useful information when getting a $list item 
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListItem.nextOffset">
            <summary>
            points to the start of the next list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListItem.type">
            <summary>
            lists the $list datatype
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListItem.dataLength">
            <summary>
            Length of the data inside the $list
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListItem.dataOffset">
            <summary>
            offset into the buffer to the start of the data
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.Device">
            <remarks>
            Device is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ISCBinaryWriter.dumpRawHeader">
            <summary>
            Writes General information about the client to the log file.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ISCBinaryWriter.dumpRawFooter">
            <summary>
            Writes xml closing information about the client to the log file. Even if FileStream is Closed.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ISCStreamWriter.dumpHeader">
            <summary>
            Writes General information about the client to the log file.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ISCStreamWriter.dumpFooter">
            <summary>
            Writes closing information about the client to the log file. Even if FileStream is Closed?
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListUtil.tenstab">
            <summary> Array of chars to lookup the char for the digit in the tenth's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="F:InterSystems.Data.IRISClient.ListUtil.onestab">
            <summary> Array of chars to lookup the char for the digit in the unit's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.IRISClient.ListUtil.GetCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="T:InterSystems.Data.IRISClient.LogFileStream">
            <remarks>
            Performs logging to a file
            </remarks>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.#ctor(System.String,System.Int32)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
            <param name="appendLogFile">bool value if LogFile should be appended</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.#ctor(System.String,System.Int32,System.Boolean,InterSystems.Data.IRISClient.LogFileStream.LogFileType)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
            <param name="appendLogFile">bool value if LogFile should be appended</param>
            <param name="lft">LogFileStream.LogFileType value</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.dump(InterSystems.Data.IRISClient.MsgHeader,System.Int32)">
            <summary>
            Writes data from a header to the log file.
            </summary>
            <param name="header">header to write to log.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.dump(InterSystems.Data.IRISClient.List.IRISBufferRO,System.Int32)">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="list">IRISBufferRO to write to log.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.dump(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="stream1">First part of byte array.</param>
            <param name="stream2">Second part of byte array.</param>
            <param name="offset">Starting offset in stream.</param>
            <param name="count">Number of bytes to write.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
            <param name="header">Header.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.dump(System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="stream">Typically the Syslist.</param>
            <param name="offset">Starting offset in stream.</param>
            <param name="count">Number of bytes to write.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
            <param name="header">Header.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.appendCurrentHex(System.Byte)">
            <summary>
            Write byte of data in hex to buffers for export to log file.
            </summary>
            <param name="val">value to convert to hex.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.formatLine(System.Int32,System.Boolean)">
            <summary>
            Format whole line for output buffer.
            </summary>
            <param name="s">Offset</param>
            <param name="lastRow">The boolean value is true if processing the last row.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.formatOffset(System.Int32)">
            <summary>
            Create the formatted hex offset text to show where you are in the message.
            </summary>
            <param name="s">The number of bytes into the message.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.logPlain(System.String)">
            <summary>
            Write text to the log.
            </summary>
            <param name="text">Text string to write.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.logApi(System.String)">
            <summary>
            Write text to the log.
            </summary>
            <param name="text">Text string to write.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.logApi(System.String,System.String,System.String)">
            <summary>
            Write Standard API information to the log.
            </summary>
            <param name="prefix">Text to place at the begining of Line.</param>
            <param name="api">API name.</param>
            <param name="text">Formatted text containing parameters passed to API.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogFileStream.close">
            <summary>
            Close the log file for all connections.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.LogFileStream.JobID">
            <summary>
            Stores the server side job id.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.LogFileStream.Name">
            <summary>
            Returns the path and name of the log file.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.LogFileStream.WriteLog">
            <summary>
            Enables writing to to the log file.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.LogHelper">
             <remarks>
             Class that handles logging of APIs in the log.
             </remarks>
             <example>
             Call class with the "using" construct for public API with no parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Call class with the "using" construct for public API with parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile, "param1="+param1+" param2=" + param2); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Call class with the "using" construct for private/public API with parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile, "param1="+param1+" param2=" + param2, true); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Setting the return text inside a "using" construct that will be run at Dispose().
            <code>
                     using (lh)
                         {  
                             ...
                             if (lh) {
                                 lh.ReturnText=retValue.ToString();
                             }
                             ...  
                         }
             </code> 
            </example>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogHelper.#ctor(InterSystems.Data.IRISClient.LogFileStream)">
            <summary>
            Log a public API taking no parameters.
            </summary>
            <param name="log">LogFileStream instance.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogHelper.#ctor(InterSystems.Data.IRISClient.LogFileStream,System.String)">
            <summary>
            Log a public API and write parameters text information.
            </summary>
            <param name="log">LogFileStream instance.</param>
            <param name="inText">Information about parameters to write to the log.</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogHelper.#ctor(InterSystems.Data.IRISClient.LogFileStream,System.String,System.Boolean)">
            <summary>
            Log a internal private/public API and write parameter information.
            </summary>
            <param name="log">LogFileStream instance.</param>
            <param name="inText">Information about parameters to write to the log.</param>
            <param name="internalfunc">True marks an internal function, False marks a public function</param>
        </member>
        <member name="M:InterSystems.Data.IRISClient.LogHelper.Dispose">
            <summary>
            Write exit of API to the log, and any ReturnText that was set.
            </summary>
        </member>
        <member name="P:InterSystems.Data.IRISClient.LogHelper.ReturnText">
            <summary>
            Stores the text to return when class is disposed.
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.SHMDevice">
            <summary>
            /// SHMDevice is the low level Shared Memory connection to the database.  
            </summary>
        </member>
        <member name="T:InterSystems.Data.IRISClient.TCPDevice">
            <remarks>
            TCPDevice is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
        <member name="T:InterSystems.Data.IRISClient.SPCDevice">
            <remarks>
            SPCDevice is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
    </members>
</doc>
